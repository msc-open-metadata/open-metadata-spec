{
    "object": "Function",
    "required_args": {
        "arg_data_type": [
            [
                "string"
            ],
            "Use the Snowflake data type that corresponds to the handler language that you are using",
            [
                "snowflake"
            ]
        ],
        "data_type": [
            [
                "string"
            ],
            "Return data type.",
            [
                "unitycatalog"
            ]
        ],
        "def": [
            [
                "string"
            ],
            "The routine definition of the function.",
            [
                "unitycatalog"
            ]
        ],
        "definition": [
            [
                "string",
                "null"
            ],
            "Defines the function body as an expression or query. SQL function",
            [
                "databricks",
                "postgres"
            ]
        ],
        "dollar_quoted_definition": [
            [
                "string",
                "null"
            ],
            "Defines the function body as an expression or query. Python function",
            [
                "databricks"
            ]
        ],
        "full_name": [
            [
                "string"
            ],
            "Full name of function in the form of catalog_name.schema_name.function_name.",
            [
                "unitycatalog"
            ]
        ],
        "function_definition": [
            [
                "string"
            ],
            "(AS) Defines the handler code executed when the UDF is called. The function_definition value must be source code in one of the languages supported for handlers (or SQL).",
            [
                "snowflake"
            ]
        ],
        "function_name": [
            [
                "string"
            ],
            "The name of the function, optionally qualified with a schema.",
            [
                "databricks"
            ]
        ],
        "handler": [
            [
                "string"
            ],
            "The name of the handler method or class",
            [
                "snowflake"
            ]
        ],
        "input_params": [
            [
                "string"
            ],
            "Input parameters.",
            [
                "unitycatalog"
            ]
        ],
        "lang_name": [
            [
                "string"
            ],
            "The implementation language of the function.",
            [
                "postgres"
            ]
        ],
        "language": [
            [
                "enum"
            ],
            "The language of the function implementation. SQL or PYTHON.",
            [
                "databricks"
            ]
        ],
        "macro text": [
            [
                "string"
            ],
            "the text of the macro (Carl note: after create macro... as..  - so the actual logic)",
            [
                "duckdb"
            ]
        ],
        "name": [
            [
                "string"
            ],
            "The name of the function.",
            [
                "snowflake",
                "duckdb",
                "postgres"
            ]
        ],
        "parameters": [
            [
                "array"
            ],
            "Specifies the a parameters of the function.",
            [
                "databricks",
                "postgres"
            ]
        ],
        "returns": [
            [
                "string"
            ],
            "Specifies the results returned by the UDF, which determines the UDF type",
            [
                "snowflake"
            ]
        ],
        "sql_body": [
            [
                "string",
                "null"
            ],
            "The SQL body of the function.",
            [
                "postgres"
            ]
        ]
    },
    "all_args": {
        "aggregate": [
            [
                "l",
                "u",
                "n"
            ],
            "Specifies that the function is an aggregate function",
            [
                "snowflake"
            ]
        ],
        "arg_data_type": [
            [
                "string"
            ],
            "Use the Snowflake data type that corresponds to the handler language that you are using",
            [
                "snowflake"
            ]
        ],
        "arg_name": [
            [
                "string",
                "null"
            ],
            "Specify the name of the input argument.",
            [
                "snowflake"
            ]
        ],
        "called on null input": [
            [
                "l",
                "u",
                "n"
            ],
            "Specifies the behavior of the UDF when called with null inputs. In contrast to system-defined functions, which always return null when any input is null, UDFs can handle null inputs, returning non-null values even when an input is null",
            [
                "snowflake"
            ]
        ],
        "comment": [
            [
                "string",
                "null"
            ],
            "User-provided free-form text description.",
            [
                "unitycatalog",
                "snowflake"
            ]
        ],
        "copy grants": [
            [
                "l",
                "u",
                "n"
            ],
            "Specifies to retain the access privileges from the original function when a new function is created using CREATE OR REPLACE FUNCTION.",
            [
                "snowflake"
            ]
        ],
        "data_type": [
            [
                "string"
            ],
            "Return data type.",
            [
                "unitycatalog"
            ]
        ],
        "def": [
            [
                "string"
            ],
            "The routine definition of the function.",
            [
                "unitycatalog"
            ]
        ],
        "default_value": [
            [
                "string",
                "null"
            ],
            "To indicate that an argument is optional, use DEFAULT default_value to specify the default value of the argument. For the default value, you can use a literal or an expression.",
            [
                "snowflake"
            ]
        ],
        "definition": [
            [
                "string",
                "null"
            ],
            "Defines the function body as an expression or query. SQL function",
            [
                "databricks",
                "postgres"
            ]
        ],
        "deterministic": [
            [
                "boolean"
            ],
            "Specifies whether the function always returns the same result for given inputs.",
            [
                "databricks"
            ]
        ],
        "dollar_quoted_definition": [
            [
                "string",
                "null"
            ],
            "Defines the function body as an expression or query. Python function",
            [
                "databricks"
            ]
        ],
        "execution_cost": [
            [
                "number"
            ],
            "The estimated execution cost of the function.",
            [
                "postgres"
            ]
        ],
        "external_access_integrations": [
            [
                "array",
                "null"
            ],
            "The names of external access integrations needed in order for this function\u2019s handler code to access external networks. An external access integration specifies network rules and secrets that specify external locations and credentials (if any) allowed for use by handler code when making requests of an external network, such as an external REST API.",
            [
                "snowflake"
            ]
        ],
        "full_name": [
            [
                "string"
            ],
            "Full name of function in the form of catalog_name.schema_name.function_name.",
            [
                "unitycatalog"
            ]
        ],
        "function_comment": [
            [
                "string"
            ],
            "Optional function description.",
            [
                "databricks"
            ]
        ],
        "function_definition": [
            [
                "string"
            ],
            "(AS) Defines the handler code executed when the UDF is called. The function_definition value must be source code in one of the languages supported for handlers (or SQL).",
            [
                "snowflake"
            ]
        ],
        "function_name": [
            [
                "string"
            ],
            "The name of the function, optionally qualified with a schema.",
            [
                "databricks"
            ]
        ],
        "handler": [
            [
                "string"
            ],
            "The name of the handler method or class",
            [
                "snowflake"
            ]
        ],
        "immutable": [
            [
                "l",
                "u",
                "n"
            ],
            "UDF assumes that the function, when called with the same inputs, will always return the same result. This guarantee is not checked. Specifying IMMUTABLE for a UDF that returns different values for the same input will result in undefined behavior.",
            [
                "snowflake"
            ]
        ],
        "imports": [
            [
                "array",
                "null"
            ],
            "The location (stage), path, and name of the file(s) to import, such as a JAR or other kind of file.",
            [
                "snowflake"
            ]
        ],
        "input_params": [
            [
                "string"
            ],
            "Input parameters.",
            [
                "unitycatalog"
            ]
        ],
        "lang_name": [
            [
                "string"
            ],
            "The implementation language of the function.",
            [
                "postgres"
            ]
        ],
        "language": [
            [
                "string",
                "enum",
                "null"
            ],
            "The language of the function implementation. SQL or PYTHON.",
            [
                "databricks",
                "unitycatalog",
                "snowflake"
            ]
        ],
        "leakproof": [
            [
                "string"
            ],
            "Indicates if the function has side effects.",
            [
                "postgres"
            ]
        ],
        "link_symbol": [
            [
                "string",
                "null"
            ],
            "The name of the function in the C language source code",
            [
                "postgres"
            ]
        ],
        "macro text": [
            [
                "string"
            ],
            "the text of the macro (Carl note: after create macro... as..  - so the actual logic)",
            [
                "duckdb"
            ]
        ],
        "name": [
            [
                "string"
            ],
            "The name of the function.",
            [
                "snowflake",
                "duckdb",
                "postgres"
            ]
        ],
        "null_input_behavior": [
            [
                "enum"
            ],
            "Behavior for NULL inputs (CALLED ON NULL INPUT, RETURNS NULL ON NULL INPUT, STRICT).",
            [
                "postgres"
            ]
        ],
        "object_file": [
            [
                "string",
                "null"
            ],
            "The path to the object file for C functions.",
            [
                "postgres"
            ]
        ],
        "packages": [
            [
                "array",
                "null"
            ],
            "The name and version number of Snowflake system packages required as dependencies. The value should be of the form package_name:version_number, where package_name is snowflake_domain:package",
            [
                "snowflake"
            ]
        ],
        "parallel": [
            [
                "enum"
            ],
            "Parallel execution safety (UNSAFE, RESTRICTED, SAFE).",
            [
                "postgres"
            ]
        ],
        "parameters": [
            [
                "string",
                "array",
                "null"
            ],
            "Specifies the a parameters of the function.",
            [
                "databricks",
                "duckdb",
                "postgres"
            ]
        ],
        "result_rows": [
            [
                "number"
            ],
            "Estimated number of rows returned by the function.",
            [
                "postgres"
            ]
        ],
        "rettype": [
            [
                "string",
                "null"
            ],
            "The return data type of the function.",
            [
                "postgres"
            ]
        ],
        "return_table": [
            [
                "array",
                "null"
            ],
            "The optional schema of the return table given rettype SETOF",
            [
                "postgres"
            ]
        ],
        "returns": [
            [
                "string"
            ],
            "Specifies the results returned by the UDF, which determines the UDF type",
            [
                "snowflake"
            ]
        ],
        "returns null on null input": [
            [
                "l",
                "u",
                "n"
            ],
            "(or its synonym STRICT) will not call the UDF if any input is null. Instead, a null value will always be returned for that row. Note that the UDF might still return null for non-null inputs.",
            [
                "snowflake"
            ]
        ],
        "returns_data_type": [
            [
                "string",
                "null"
            ],
            "The return data type of the function. For SQL optional. For Python required",
            [
                "databricks"
            ]
        ],
        "returns_table": [
            [
                "array",
                "null"
            ],
            "This clause marks the function as a table function. LANGUAGE SQL",
            [
                "databricks"
            ]
        ],
        "runtime_version": [
            [
                "string",
                "null"
            ],
            "runtime version to use",
            [
                "snowflake"
            ]
        ],
        "secrets": [
            [
                "array",
                "null"
            ],
            "Assigns the names of secrets to variables so that you can use the variables to reference the secrets when retrieving information from secrets in handler code",
            [
                "snowflake"
            ]
        ],
        "secure": [
            [
                "l",
                "u",
                "n"
            ],
            "Specifies that the function is secure. For more information about secure functions, see Protecting Sensitive Information with Secure UDFs and Stored Procedures.",
            [
                "snowflake"
            ]
        ],
        "security": [
            [
                "enum"
            ],
            "Priveleges to execute with (SECURITY INVOKER, SECURITY DEFINER).",
            [
                "postgres"
            ]
        ],
        "set_config": [
            [
                "array",
                "null"
            ],
            "The name of the planner support function.",
            [
                "postgres"
            ]
        ],
        "sql_access": [
            [
                "enum"
            ],
            "Specifies if the function reads SQL data. CONTAINS SQL or READS SQL DATA",
            [
                "databricks"
            ]
        ],
        "sql_body": [
            [
                "string",
                "null"
            ],
            "The SQL body of the function.",
            [
                "postgres"
            ]
        ],
        "support_function": [
            [
                "string",
                "null"
            ],
            "The name of the planner support function.",
            [
                "postgres"
            ]
        ],
        "temp": [
            [
                "l",
                "u",
                "n"
            ],
            "Specifies that the function persists only for the duration of the session that you created it in. A temporary function is dropped at the end of the session.",
            [
                "snowflake"
            ]
        ],
        "transform": [
            [
                "array"
            ],
            "Transforms a call to the function should apply",
            [
                "postgres"
            ]
        ],
        "volatile": [
            [
                "l",
                "u",
                "n"
            ],
            "UDF might return different values for different rows, even for the same input (e.g. due to non-determinism and statefullness",
            [
                "snowflake"
            ]
        ],
        "volatility": [
            [
                "enum"
            ],
            "The volatility of the function (IMMUTABLE, STABLE, VOLATILE).",
            [
                "postgres"
            ]
        ],
        "window": [
            [
                "boolean"
            ],
            "Indicates if the function is a window function.",
            [
                "postgres"
            ]
        ]
    },
    "fields": {
        "api_integration": [
            [
                "string",
                "null"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "argument_signature": [
            [
                "string"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "as_locator": [
            [
                "string"
            ],
            "Always 'NO', reserved for future use.",
            [
                "databricks"
            ]
        ],
        "catalog_name": [
            [
                "string"
            ],
            "Name of parent catalog.",
            [
                "unitycatalog"
            ]
        ],
        "character_maximum_length": [
            [
                "integer",
                "null"
            ],
            "Always NULL, reserved for future use.",
            [
                "databricks",
                "snowflake"
            ]
        ],
        "character_octet_length": [
            [
                "integer",
                "string",
                "null"
            ],
            "Always NULL, reserved for future use.",
            [
                "databricks",
                "snowflake"
            ]
        ],
        "comment": [
            [
                "string",
                "null"
            ],
            "An optional comment describing the routine.",
            [
                "databricks",
                "unitycatalog",
                "duckdb",
                "snowflake"
            ]
        ],
        "compression": [
            [
                "string",
                "null"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "context_headers": [
            [
                "string",
                "null"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "created": [
            [
                "datetime",
                "timestamp"
            ],
            "Timestamp when the routine was created.",
            [
                "databricks",
                "snowflake"
            ]
        ],
        "created_at": [
            [
                "long"
            ],
            "Time at which this function was created, in epoch milliseconds.",
            [
                "unitycatalog"
            ]
        ],
        "created_by": [
            [
                "string"
            ],
            "Principal which created the routine.",
            [
                "databricks",
                "unitycatalog"
            ]
        ],
        "data_type": [
            [
                "string"
            ],
            "The result data type name, or 'TABLE' for a table valued function.",
            [
                "databricks",
                "unitycatalog",
                "snowflake"
            ]
        ],
        "database_name": [
            [
                "string"
            ],
            "The name of the database that contains this function.",
            [
                "duckdb"
            ]
        ],
        "database_oid": [
            [
                "string"
            ],
            "N/A",
            [
                "duckdb"
            ]
        ],
        "datetime_precision": [
            [
                "integer",
                "null"
            ],
            "For DATE 0, for TIMESTAMP, and INTERVAL \u2026 SECOND 3, any other INTERVAL 0, NULL otherwise.",
            [
                "databricks"
            ]
        ],
        "description": [
            [
                "string",
                "null"
            ],
            "Description of this function",
            [
                "duckdb"
            ]
        ],
        "example": [
            [
                "string",
                "null"
            ],
            "N/A",
            [
                "duckdb"
            ]
        ],
        "external_access_integrations": [
            [
                "array",
                "null"
            ],
            "The names of external access integrations needed in order for this function\u2019s handler code to access external networks. An external access integration specifies network rules and secrets that specify external locations and credentials (if any) allowed for use by handler code when making requests of an external network, such as an external REST API.",
            [
                "snowflake"
            ]
        ],
        "external_language": [
            [
                "string",
                "null"
            ],
            "Always NULL, reserved for future use.",
            [
                "databricks",
                "unitycatalog"
            ]
        ],
        "external_name": [
            [
                "string",
                "null"
            ],
            "Always NULL, reserved for future use.",
            [
                "databricks"
            ]
        ],
        "full_data_type": [
            [
                "string"
            ],
            "The result data type definition, for example 'DECIMAL(10, 4)'.",
            [
                "databricks",
                "unitycatalog"
            ]
        ],
        "full_name": [
            [
                "string"
            ],
            "Full name of function in the form of catalog_name.schema_name.function_name.",
            [
                "unitycatalog"
            ]
        ],
        "function_catalog": [
            [
                "string"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "function_definition": [
            [
                "string"
            ],
            "(AS) Defines the handler code executed when the UDF is called. The function_definition value must be source code in one of the languages supported for handlers (or SQL).",
            [
                "snowflake"
            ]
        ],
        "function_id": [
            [
                "string"
            ],
            "ID of function, relative to parent schema.",
            [
                "unitycatalog"
            ]
        ],
        "function_language": [
            [
                "string"
            ],
            "(carl: the language of the function, default null means SQL, but can be Python etc)",
            [
                "snowflake"
            ]
        ],
        "function_name": [
            [
                "string"
            ],
            "The SQL name of the function.",
            [
                "duckdb",
                "snowflake"
            ]
        ],
        "function_oid": [
            [
                "string"
            ],
            "The internal identifier for this function",
            [
                "duckdb"
            ]
        ],
        "function_owner": [
            [
                "string"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "function_schema": [
            [
                "string"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "function_type": [
            [
                "string"
            ],
            "The function kind. Value is one of: table,scalar,aggregate,pragma,macro",
            [
                "duckdb"
            ]
        ],
        "handler": [
            [
                "string"
            ],
            "The name of the handler method or class",
            [
                "snowflake"
            ]
        ],
        "has_side_effects": [
            [
                "boolean"
            ],
            "false if this is a pure function. true if this function changes the database state (like sequence functions nextval() and curval()).",
            [
                "duckdb"
            ]
        ],
        "imports": [
            [
                "array",
                "null"
            ],
            "The location (stage), path, and name of the file(s) to import, such as a JAR or other kind of file.",
            [
                "snowflake"
            ]
        ],
        "input_params": [
            [
                "array"
            ],
            "Input parameters.",
            [
                "unitycatalog"
            ]
        ],
        "installed_packages": [
            [
                "string",
                "null"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "internal": [
            [
                "boolean"
            ],
            "N/A",
            [
                "duckdb"
            ]
        ],
        "interval_precision": [
            [
                "integer",
                "null"
            ],
            "Always NULL, reserved for future use.",
            [
                "databricks"
            ]
        ],
        "interval_type": [
            [
                "string",
                "null"
            ],
            "For INTERVAL the unit portion of the interval, e.g. 'YEAR TO MONTH', NULL otherwise.",
            [
                "databricks"
            ]
        ],
        "is_aggregate": [
            [
                "boolean"
            ],
            "Specifies that the function is an aggregate function",
            [
                "snowflake"
            ]
        ],
        "is_data_metric": [
            [
                "boolean"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "is_deterministic": [
            [
                "boolean",
                "string"
            ],
            "'YES' if routine defined as deterministic, 'NO' otherwise.",
            [
                "databricks",
                "unitycatalog"
            ]
        ],
        "is_external": [
            [
                "boolean"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "is_memoizable": [
            [
                "boolean"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "is_null_call": [
            [
                "boolean",
                "string"
            ],
            "Always 'YES', reserved for future use.",
            [
                "databricks",
                "unitycatalog",
                "snowflake"
            ]
        ],
        "is_secure": [
            [
                "boolean"
            ],
            "Specifies that the function is secure. For more information about secure functions, see Protecting Sensitive Information with Secure UDFs and Stored Procedures.",
            [
                "snowflake"
            ]
        ],
        "last_altered": [
            [
                "datetime",
                "timestamp"
            ],
            "Timestamp when the routine definition was last altered in any way.",
            [
                "databricks",
                "snowflake"
            ]
        ],
        "last_altered_by": [
            [
                "string"
            ],
            "Principal which last altered the routine.",
            [
                "databricks"
            ]
        ],
        "macro_definition": [
            [
                "string",
                "null"
            ],
            "If this is a macro, the SQL expression that defines it.",
            [
                "duckdb"
            ]
        ],
        "max_batch_rows": [
            [
                "integer",
                "null"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "maximum_cardinality": [
            [
                "integer",
                "null"
            ],
            "Always NULL, reserved for future use.",
            [
                "databricks"
            ]
        ],
        "name": [
            [
                "string"
            ],
            "Name of function, relative to parent schema.",
            [
                "unitycatalog"
            ]
        ],
        "numeric_precision": [
            [
                "integer",
                "null"
            ],
            "For base-2 integral numeric types, FLOAT, and DOUBLE, the number of supported bits. For DECIMAL the number of digits, NULL otherwise.",
            [
                "databricks",
                "snowflake"
            ]
        ],
        "numeric_precision_radix": [
            [
                "integer",
                "null"
            ],
            "For DECIMAL 10, for all other numeric types 2, NULL otherwise.",
            [
                "databricks",
                "snowflake"
            ]
        ],
        "numeric_scale": [
            [
                "integer",
                "null"
            ],
            "For integral numeric types 0, for DECIMAL the number of digits to the right of the decimal point, NULL otherwise.",
            [
                "databricks",
                "snowflake"
            ]
        ],
        "oid": [
            [
                "int"
            ],
            "Row identifier",
            [
                "postgres"
            ]
        ],
        "owner": [
            [
                "string"
            ],
            "Username of the current function owner.",
            [
                "unitycatalog"
            ]
        ],
        "packages": [
            [
                "array",
                "null"
            ],
            "The name and version number of Snowflake system packages required as dependencies. The value should be of the form package_name:version_number, where package_name is snowflake_domain:package",
            [
                "snowflake"
            ]
        ],
        "parameter_style": [
            [
                "string",
                "null"
            ],
            "'SQL', reserved for future use.",
            [
                "databricks",
                "unitycatalog"
            ]
        ],
        "parameter_types": [
            [
                "string"
            ],
            "If the function has parameters, a list of logical data type names corresponding to the parameter list.",
            [
                "duckdb"
            ]
        ],
        "parameters": [
            [
                "string"
            ],
            "If the function has parameters, the list of parameter names.",
            [
                "duckdb"
            ]
        ],
        "proacl": [
            [
                "array",
                "null"
            ],
            "Access privileges",
            [
                "postgres"
            ]
        ],
        "proallargtypes": [
            [
                "array",
                "null"
            ],
            "All argument type OIDs",
            [
                "postgres"
            ]
        ],
        "proargdefaults": [
            [
                "string",
                "null"
            ],
            "Default values expression tree",
            [
                "postgres"
            ]
        ],
        "proargmodes": [
            [
                "array",
                "null"
            ],
            "Argument modes",
            [
                "postgres"
            ]
        ],
        "proargnames": [
            [
                "array",
                "null"
            ],
            "Argument names",
            [
                "postgres"
            ]
        ],
        "proargtypes": [
            [
                "array"
            ],
            "Input argument type OIDs",
            [
                "postgres"
            ]
        ],
        "probin": [
            [
                "string",
                "null"
            ],
            "Additional execution info",
            [
                "postgres"
            ]
        ],
        "proconfig": [
            [
                "array",
                "null"
            ],
            "Run-time configuration settings",
            [
                "postgres"
            ]
        ],
        "procost": [
            [
                "float"
            ],
            "Execution cost",
            [
                "postgres"
            ]
        ],
        "proisstrict": [
            [
                "boolean"
            ],
            "Strict function flag",
            [
                "postgres"
            ]
        ],
        "prokind": [
            [
                "string"
            ],
            "Function kind (f, p, a, w)",
            [
                "postgres"
            ]
        ],
        "prolang": [
            [
                "int"
            ],
            "Implementation language OID",
            [
                "postgres"
            ]
        ],
        "proleakproof": [
            [
                "boolean"
            ],
            "Leak-proof flag",
            [
                "postgres"
            ]
        ],
        "proname": [
            [
                "string"
            ],
            "Name of the function",
            [
                "postgres"
            ]
        ],
        "pronamespace": [
            [
                "int"
            ],
            "Namespace OID",
            [
                "postgres"
            ]
        ],
        "pronargdefaults": [
            [
                "int"
            ],
            "Number of arguments with defaults",
            [
                "postgres"
            ]
        ],
        "pronargs": [
            [
                "int"
            ],
            "Number of input arguments",
            [
                "postgres"
            ]
        ],
        "proowner": [
            [
                "int"
            ],
            "Owner OID",
            [
                "postgres"
            ]
        ],
        "proparallel": [
            [
                "string"
            ],
            "Parallel safety (s, r, u)",
            [
                "postgres"
            ]
        ],
        "properties": [
            [
                "string"
            ],
            "JSON-serialized key-value pair map, encoded as a string.",
            [
                "unitycatalog"
            ]
        ],
        "proretset": [
            [
                "boolean"
            ],
            "Returns a set flag",
            [
                "postgres"
            ]
        ],
        "prorettype": [
            [
                "int"
            ],
            "Return type OID",
            [
                "postgres"
            ]
        ],
        "prorows": [
            [
                "float"
            ],
            "Estimated number of result rows",
            [
                "postgres"
            ]
        ],
        "prosecdef": [
            [
                "boolean"
            ],
            "Security definer flag",
            [
                "postgres"
            ]
        ],
        "prosqlbody": [
            [
                "string",
                "null"
            ],
            "Pre-parsed SQL function body",
            [
                "postgres"
            ]
        ],
        "prosrc": [
            [
                "string"
            ],
            "Function source code or identifier",
            [
                "postgres"
            ]
        ],
        "prosupport": [
            [
                "int"
            ],
            "Support function OID",
            [
                "postgres"
            ]
        ],
        "protrftypes": [
            [
                "array",
                "null"
            ],
            "Transform argument/result type OIDs",
            [
                "postgres"
            ]
        ],
        "provariadic": [
            [
                "int"
            ],
            "Variadic parameter type OID",
            [
                "postgres"
            ]
        ],
        "provolatile": [
            [
                "string"
            ],
            "Volatility (i, s, v)",
            [
                "postgres"
            ]
        ],
        "request_translator": [
            [
                "string",
                "null"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "response_translator": [
            [
                "string",
                "null"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "return_params": [
            [
                "array"
            ],
            "Return parameters.",
            [
                "unitycatalog"
            ]
        ],
        "return_type": [
            [
                "string",
                "null"
            ],
            "The logical data type name of the returned value. Applicable for scalar and aggregate functions.",
            [
                "duckdb"
            ]
        ],
        "routine_body": [
            [
                "string"
            ],
            "'SQL' or 'PYTHON'.",
            [
                "databricks",
                "unitycatalog"
            ]
        ],
        "routine_catalog": [
            [
                "string"
            ],
            "Matches specific_catalog.",
            [
                "databricks"
            ]
        ],
        "routine_definition": [
            [
                "string",
                "null"
            ],
            "The full definition of the routine. NULL if the user is not the owner.",
            [
                "databricks",
                "unitycatalog"
            ]
        ],
        "routine_dependencies": [
            [
                "array"
            ],
            "Dependencies of the function. Functions/tables",
            [
                "unitycatalog"
            ]
        ],
        "routine_name": [
            [
                "string"
            ],
            "Name of the routine.",
            [
                "databricks"
            ]
        ],
        "routine_schema": [
            [
                "string"
            ],
            "Matches specific_schema.",
            [
                "databricks"
            ]
        ],
        "routine_type": [
            [
                "string"
            ],
            "Always 'FUNCTION'. Reserved for future use.",
            [
                "databricks"
            ]
        ],
        "runtime_version": [
            [
                "string",
                "null"
            ],
            "runtime version to use",
            [
                "snowflake"
            ]
        ],
        "schema_name": [
            [
                "string"
            ],
            "Name of parent schema relative to its parent catalog.",
            [
                "unitycatalog",
                "duckdb"
            ]
        ],
        "secrets": [
            [
                "array",
                "null"
            ],
            "Assigns the names of secrets to variables so that you can use the variables to reference the secrets when retrieving information from secrets in handler code",
            [
                "snowflake"
            ]
        ],
        "security_type": [
            [
                "string"
            ],
            "Always 'DEFINER', reserved for future use.",
            [
                "databricks",
                "unitycatalog"
            ]
        ],
        "specific_catalog": [
            [
                "string"
            ],
            "Catalog containing the routine.",
            [
                "databricks"
            ]
        ],
        "specific_name": [
            [
                "string"
            ],
            "Schema unique (specific) name of the routine.",
            [
                "databricks",
                "unitycatalog"
            ]
        ],
        "specific_schema": [
            [
                "string"
            ],
            "Database (schema) containing the routine.",
            [
                "databricks"
            ]
        ],
        "sql_data_access": [
            [
                "string"
            ],
            "'READS SQL DATA' if routine reads from a relation, 'CONTAINS SQL' otherwise.",
            [
                "databricks",
                "unitycatalog"
            ]
        ],
        "sql_path": [
            [
                "string",
                "null"
            ],
            "Always NULL, reserved for future use.",
            [
                "databricks"
            ]
        ],
        "stability": [
            [
                "string",
                "null"
            ],
            "N/A",
            [
                "duckdb"
            ]
        ],
        "tags": [
            [
                "map"
            ],
            "N/A",
            [
                "duckdb"
            ]
        ],
        "target_path": [
            [
                "string",
                "null"
            ],
            "N/A",
            [
                "snowflake"
            ]
        ],
        "updated_at": [
            [
                "long"
            ],
            "Time at which this function was last updated, in epoch milliseconds.",
            [
                "unitycatalog"
            ]
        ],
        "updated_by": [
            [
                "string"
            ],
            "Username of the user who last modified the function.",
            [
                "unitycatalog"
            ]
        ],
        "varargs": [
            [
                "string",
                "null"
            ],
            "The name of the data type in case the function has a variable number of arguments, or NULL if the function does not have a variable number of arguments.",
            [
                "duckdb"
            ]
        ],
        "volatility": [
            [
                "string"
            ],
            "UDF might return different values for different rows, even for the same input (e.g. due to non-determinism and statefullness",
            [
                "snowflake"
            ]
        ]
    }
}